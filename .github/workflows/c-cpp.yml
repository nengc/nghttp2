name: build-windows

on: [push, pull_request]

env:
  VCPKG_PATH: C:/vcpkg

jobs:
  build-windows:
    strategy:
      matrix:
        arch: [x86, x64]
        include:
        - arch: x86
          platform: Win32
          triplet: i686-windows
        - arch: x64
          platform: x64
          triplet: x64-windows

    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Setup vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git $env:VCPKG_PATH
        & $env:VCPKG_PATH/bootstrap-vcpkg.bat
        
    - name: Install dependencies
      run: |
        & $env:VCPKG_PATH/vcpkg install --triplet=${{ matrix.triplet }} openssl jansson libevent libxml2 c-ares
        
    - name: Configure CMake
      run: |
        cmake -B build `
          -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_PATH/scripts/buildsystems/vcpkg.cmake" `
          -DCMAKE_GENERATOR_PLATFORM=${{ matrix.platform }} `
          -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} `
          -DWITH_ASIO=ON `
          -DWITH_APP=ON `
          -DWITH_HPACK_TOOLS=ON `
          -DBUILD_TESTING=ON
        
    - name: Build project
      run: |
        cmake --build build --config Release
        cmake --build build --target RUN_TESTS
        
    - name: Package installation
      run: |
        cmake --install build --prefix dist/nghttp2
        
    - name: Create ZIP package
      run: |
        $platform = "${{ matrix.platform }}"
        $archiveName = "nghttp2-${{ github.run_id }}-win-$platform.zip"
        Compress-Archive -Path dist/nghttp2/* -DestinationPath $archiveName
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer-${{ matrix.platform }}
        path: ${{ github.workspace }}\$archiveName
